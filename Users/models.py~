from django.db import models
from django.contrib.auth.models import AbstractUser
#from UI.Apps.Organisation.models import Company, Groups
from sampleGroupChat.settings import USER_DIRS as userdir
import os


# Create your models here.
#class VerticalApp(models.Model):
#    verticalappname = models.CharField(max_length=100)

'''
class CustomUser(AbstractUser):
    # vertical_app = models.ForeignKey(VerticalApp, null=True)
    time_zone = models.CharField(max_length=150, null=True, blank=True)
    #company = models.ForeignKey(Company, null=True, blank=True)
    #group = models.ForeignKey(Groups, null=True, blank=True)

    def save(self, *args, **kwargs):
        if not self.pk:
            super(CustomUser, self).save(*args, **kwargs)
            # Users/{new_user_id}/ folder
            user_dir = userdir + str(self.id)
            os.makedirs(user_dir)
            # Inside that Resources, Logs folders
            #resources_dir = user_dir + '/Resources'
            #os.makedirs(resources_dir)
            #logs_dir = user_dir + '/Logs'
            #os.makedirs(logs_dir)
            # Inside Resources folder - create blank file resources.txt
            #resource_file = resources_dir + '/resource.txt'
            #open(resource_file, 'w').close()
            #if not self.time_zone:
            #    self.time_zone = "UTC"

        super(CustomUser, self).save(*args, **kwargs)
    # def save(self):
    #     if not self.pk:
    #         super(CustomUser, self).save()
    #
    #     # Users/{new_user_id}/ folder
    #     user_dir = userdir + "/" + str(self.id)
    #     os.makedirs(user_dir)
    #
    #     # Inside that Resources, Logs folders
    #     resources_dir = user_dir + '/Resources'
    #     os.makedirs(resources_dir)
    #     logs_dir = user_dir + '/Logs'
    #     os.makedirs(logs_dir)
    #
    #     # Inside Resources folder - create blank file resources.txt
    #     resource_file = resources_dir + '/resource.txt'
    #     open(resource_file, 'w').close()

"""
class Gateway(models.Model):
    user = models.ForeignKey(CustomUser)
    gatewayname = models.CharField(max_length=50)
    gatewayip = models.CharField(max_length=20)
    description = models.CharField(max_length=500, blank=True, null=True)


class Sensor(models.Model):
    gateway = models.ForeignKey(Gateway)
    sensorname = models.CharField(max_length=50)
    sensorip = models.CharField(max_length=20)
    description = models.CharField(max_length=500, blank=True, null=True)
"""
'''
